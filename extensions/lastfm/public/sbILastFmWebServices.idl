/*
Copyright (c) 2008, Pioneers of the Inevitable, Inc.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice,
    this list of conditions and the following disclaimer.
  * Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.
  * Neither the name of Pioneers of the Inevitable, Songbird, nor the names
    of its contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
#include "nsISupports.idl"

interface nsIDOMDocument;
interface nsIPropertyBag;

[scriptable, uuid(1e6a1de4-8b24-459d-8122-3809db6602ac)]
interface sbILastFm : nsISupports {
  // the username of the currently logged-in last.fm user
  readonly attribute string username;
};

[scriptable, function, uuid(ccc25979-fa92-444c-8656-33bad339435b)]
interface sbILastFmWebServicesResponse : nsISupports {
  // an API response has been recieved
  // @aSucceeded indicates if the call was succesful or not
  // @aResponse contains the XML response - for successful calls and for calls
  // that return an API error See the Last.fm API documentation for the DOM
  // structures to expect.
  void responseReceived(in boolean aSucceeded, in nsIDOMDocument aResponse);
};

[scriptable, uuid(30280ad6-8556-4d81-a479-4b59324c9334)]
interface sbILastFmWebServices : nsISupports {
  // what user is currently associated with last.fm
  readonly attribute string username;

  // is the current user logged in?
  readonly attribute boolean loggedIn;

  // Make an API call against the new Last.fm API
  // See <http://www.last.fm/api/rest> for the list of API calls that are
  // available. The method name is passed in @aMethod. Authentication, API
  // keys and request signing will be taken care of automatically. Other
  // paramters should be passed in property bag @aArguments. The callback
  // @aCallback will be called when the API call completes.
  void apiCall(in string aMethod,
               in nsIPropertyBag aArguments, // NOTE: values must be strings
               in sbILastFmWebServicesResponse aCallback);
};

[scriptable, uuid(b88cda15-f36e-4984-982e-160f60abca3e)]
interface sbILastFmRadio : nsISupports {
  // tune into a lastfm:// ratio station
  void radioPlay(in string aStation);
};
